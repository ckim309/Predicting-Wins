# packages
library(tidyverse)
library(ggplot2)

# load csv
adv_stats <- read.csv("C:/Users/Chae Kim/Documents/Projects/Playoffs/AdvStats.csv")
standings <- read.csv("C:/Users/Chae Kim/Documents/Projects/Playoffs/Standings.csv")
standings_merged <- merge(adv_stats, standings, by = c('Season', 'Team' ,'Playoff' , 'W', 'L'))

avg_stats <- read.csv("C:/Users/Chae Kim/Documents/Projects/Playoffs/Stats.csv")
df <- merge(standings_merged, avg_stats, by = c('Season', 'Team' ,'Playoff'))


# splitting Teams by conference
east <- c('Boston Celtics' , 
          'Brooklyn Nets' , 
          'New York Knicks' , 
          'Philadelphia 76ers' , 
          'Toronto Raptors' ,	
          'Chicago Bulls' ,
          'Cleveland Cavaliers' , 
          'Detroit Pistons' , 
          'Indiana Pacers' , 
          'Milwaukee Bucks' , 
          'Atlanta Hawks' , 
          'Charlotte Bobcats' , 'Charlotte Hornets' , 
          'Miami Heat' , 
          'Orlando Magic' , 
          'Washington Wizards')

west <- c('Denver Nuggets' ,
          'Minnesota Timberwolves' ,
          'Oklahoma City Thunder' ,
          'Portland Trail Blazers' ,
          'Utah Jazz' ,
          'Golden State Warriors' ,
          'Los Angeles Clippers' ,
          'Los Angeles Lakers' ,
          'Phoenix Suns' ,
          'Sacramento Kings' ,
          'Dallas Mavericks' ,
          'Houston Rockets' ,
          'Memphis Grizzlies' ,
          'New Orleans Hornets' ,
          'San Antonio Spurs')


# 1. How many games does the Los Angeles Lakers need to win to advance to the Playoffs without going through the Play-in tournament?

e_playoff <- df %>% filter(Team %in% east, Rank == 6) # dataframe with only teams that are guaranteed a spot in the playoffs (TOP 6)
w_playoff <- df %>% filter(Team %in% west, Rank == 6)

# eastern conference
e_win_perc <- e_playoff %>% select(W, L) %>% mutate(Total = W+L) %>% mutate(win_percentage = W/Total) # calculating win percentage for the Eastern Conference
(e_avg_win_perc <- mean(e_win_perc$win_percentage)) # average win percentage
(e_reg_season_win <- e_avg_win_perc * 82) # 82 defines the number of regular season games

# western conference
(w_win_perc <- w_playoff %>% select(W, L) %>% mutate(Total = W+L) %>% mutate(win_percentage = W/Total)) # calculating win percentage for the Western Conference
(w_avg_win_perc <- mean(w_win_perc$win_percentage))  # average win percentage
(w_reg_season_win <- w_avg_win_perc * 82) # 82 defines the number of regular season games


# 2. What does it take to win 49 games in the regular season to directly advance to the Playoffs?

#remove all non-numeric
str(df)
df1 <- df %>% select(-c("Season" , "Team" , "Playoff" , "Arena" , "Attend." , "Attend..G" , 'G','GB' , 'GB', 'PW' ,'PL' , 'Rank')) # removing non-numeric columns
str(df1)

(cor_w <- cor(df1[,-1],df1$W)) # finding variables correlated with wins

# How NRtg(net rating) affects Wins regression model
(net_rating <- summary(lm(W ~ NRtg, data=df)))

(W_NRtg <- (55 - 39.83787)/2.40815) # NRtg needed to achieve 55 wins in the Western COnference

# nrtg and wins regression model
(ggplot(data=df, aes(NRtg, W, colour = Playoff)) + 
    geom_smooth(method = "lm" , se = FALSE, colour = 'Black') +
    geom_point() +
    scale_color_manual(name = "Made the Playoffs", 
                       values = c("#F74F2B", "#31E9FB")) +
    labs(x='NRtg (Net Rating)', y='Wins', title='Relationship Between Wins and NRtg') +
    theme_minimal() +
    theme(legend.position = "top", plot.title = element_text(hjust=0.5, size=13))
)


# 3. Will the current roster of the Los Angeles Lakers win 49 games by the end of the season to directly advance to the Playoffs?
(lakers_nrtg_2023 <- lakers_ortg_2023 - lakers_drtg_2023)
(wins_prediction <- 39.83787 + (2.40815 * lakers_nrtg_2023))


# 4. What can the Los Angeles Lakers do to improve their net rating, winning enough games to directly advance to the Playoffs?

# offensive rating - lakers vs league
(ortg_rnk <- adv_stats %>% 
      filter(Season == 2022) %>% 
      select(Team, ORtg) %>% 
      mutate(rank = rank(-ORtg)))
# ORtg Bar Graph
ortg_graph <- ggplot(ortg_rnk, aes(x = reorder(Team, - ORtg), 
                     y = ORtg, 
                     fill = factor(ifelse(Team == 'Los Angeles Lakers', "color", 'none')))) +
              geom_bar(stat = "identity") +
              scale_fill_manual(name = ' team' , values = c('#FDB927', 'gray')) +
              labs(y = 'ORtg', title = 'League ORtg Ranking')
ortg_graph + coord_cartesian(ylim = c(110, 120))  +
  geom_hline(yintercept = mean(ortg_rnk$ORtg, na.rm=TRUE)) + 
  annotate("text", x=25, y=115.5, size = 3,  label="League Average") +
  theme(legend.position="none",
        axis.title.x=element_blank(),
        axis.text=element_text(size=8),
        panel.background = element_blank(),
        plot.title = element_text(hjust = 0.5),
        axis.text.x = element_text(angle = 90, vjust = 1, hjust=0.1))

#defensive rating
(drtg_rnk <- adv_stats %>%  
    filter(Season == 2022) %>% 
    select(Team, DRtg) %>% 
    mutate(rank = rank(DRtg)))
# defensive rating bar graph - lakers vs league
drtg_graph <- ggplot(drtg_rnk, aes(x = reorder(Team, DRtg), 
                          y = DRtg, 
                          fill = factor(ifelse(Team == 'Los Angeles Lakers', "color", 'none')))) +
                    geom_bar(stat = "identity") +
                    scale_fill_manual(name = ' team' , values = c('#FDB927', 'gray')) +
                    labs(y = 'DRtg', title = 'League DRtg Ranking')
drtg_graph + coord_cartesian(ylim = c(110, 120))  +
  geom_hline(yintercept = mean(drtg_rnk$DRtg, na.rm=TRUE)) +
  annotate("text", x=5, y=115.5, size = 3,  label="League Average") +
  theme(legend.position="none",
        axis.title.x=element_blank(),
        axis.text=element_text(size=8),
        panel.background = element_blank(),
        plot.title = element_text(hjust = 0.5),
        axis.text.x = element_text(angle = 90, vjust = 1, hjust=0.1))


# comparing lakers offensive statistcs to rest of league
(current_season <- avg_stats %>% filter(Season == 2022) %>% select(Team, X2P, X3P, FT))
(two_points_rnk <- current_season %>% select(Team, X2P) %>% mutate(rank = rank(-X2P)) %>% arrange(-X2P))
(three_points_rnk <- current_season %>% select(Team, X3P) %>% mutate(rank = rank(-X3P)) %>% arrange(-X3P))
(free_throw_rnk <- current_season %>% select(Team, FT ) %>% mutate(rank = rank(-FT)) %>% arrange(-FT))

(current_season_perc <- avg_stats %>% filter(Season == 2022) %>% select(Team, X2P., X3P., FT.))
(two_points_perc_rnk <- current_season_perc %>% select(Team, X2P.) %>% mutate(rank = rank(-X2P.)) %>% arrange(-X2P.))
(three_points_perc_rnk <- current_season_perc %>% select(Team, X3P.) %>% mutate(rank = rank(-X3P.)) %>% arrange(-X3P.))
(free_throw_perc_rnk <- current_season_perc %>% select(Team, FT.) %>% mutate(rank = rank(-FT.)) %>% arrange(-FT.))


